name: Publish

on:
  workflow_dispatch:
    inputs:
      release:
        required: true
        description: Create Github Release
        type: boolean
        default: true
      publish:
        required: true
        description: Publish To PyPI
        type: boolean
        default: true

jobs:
  publish-package:
    name: Publish Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: bundle

    steps:
      - name: Prepare Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[release]'

      - name: Check Version
        id: get_version
        run: |
          get_version=$(git describe --tags --abbrev=0)
          echo "Got Version: $get_version"
          echo "get_version=$get_version" >> $GITHUB_OUTPUT

      - name: Download Binary Artifact
        uses: actions/download-artifact@v4
        with:
          name: xls_updater
          path: artifact

      - name: Create Github Release
        if: ${{ github.event.inputs.release == 'true' }}
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.bump_version.outputs.get_version }}
          tag_name: ${{ steps.bump_version.outputs.get_version }}
          body: New Release ${{ steps.bump_version.outputs.get_version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            artifact/xls_updater
            artifact/xls_updater.md5
            artifact/xls_updater.sha256

      - name: Build Package
        if: ${{ github.event.inputs.publish == 'true' }}
        run: |
          python -m build

      - name: Publish To PyPI
        if: ${{ github.event.inputs.publish == 'true' }}
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_USERNAME: ${{ secrets.PYPI_API_USER }}
        run: |
          python -m twine upload dist/*

  bundle:
    name: Bundle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[bin]'

      - name: Create binary bundle
        run: |
          pyinstaller xls_updater.spec
          chmod +x dist/xls_updater

      - name: Bundle info
        run: |
          md5sum dist/xls_updater | cut -d ' ' -f1 > dist/xls_updater.md5
          sha256sum dist/xls_updater | cut -d ' ' -f1 > dist/xls_updater.sha256
          echo "Bundle Info"
          echo "============"
          echo "Size: $(du -sh dist/xls_updater | cut -f1)"
          echo "MD5: $(cat dist/xls_updater.md5)"
          echo "SHA256: $(cat dist/xls_updater.sha256)"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: xls_updater
          path: |
            dist/xls_updater
            dist/xls_updater.md5
            dist/xls_updater.sha256
